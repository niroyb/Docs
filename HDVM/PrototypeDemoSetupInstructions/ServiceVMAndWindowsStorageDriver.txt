Quick update on the docker stuff:

I’ve updated the host Windows VM on HD-VM1 to have the updated docker build along with the Linux service VM called “serviceVM”

The steps to do it:

Compiling source:
1)	Get the docker source from the git repo: //HD-VM1/Public/docker. Then, compile by typing in ./hack/make.sh.
2)	Compile the service VM server code (located in docker_work/serviceVMServer/server in our GitHub repo).

Installing:
3)	Create a nested linux VM called serviceVM and move the service VM exe, and the create_fixed_vhd.sh script to the service VM. Start running the server
4)	Copy docker.exe and dockerd.exe to the System32 directory of the Windows VM.
5)	Create a file called serviceVM.cfg in C:\ProgramData\docker\windowsfilter. This folder won’t exist until you run docker, so just make it manually
a.	The file has three K=V lines:
IP=<IP of service VM>
NAME=<Name of service VM>
VERSION=2

//
// Start the Service VM
//
start the Linux Service VM from the Hyper-V Manager
Log on to the machine: 
username:root
password:asd

then run 
./server


// Download Docker image
// nginx Docker image is used as an example here

//---- before pull --------------
C:\>docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE

C:\>docker pull nginx
Using default tag: latest
latest: Pulling from library/nginx
75a822cd7888: Pull complete
0aefb9dc4a57: Pull complete
046e44ee6057: Pull complete
Digest: sha256:fab482910aae9630c93bd24fc6fcecb9f9f792c24a8974f5e46d8ad625ac2357
Status: Downloaded newer image for nginx:latest

C:\>docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
nginx               latest              01f818af747d        2 weeks ago         182 MB

//layer VHDs created
C:\ProgramData\docker\windowsfilter>dir *.vhd/s
 Volume in drive C has no label.
 Volume Serial Number is B298-C073

 Directory of C:\ProgramData\docker\windowsfilter\00bb52750291e6c394972c717d17f2c331f92f12f7f724a9e112b0958c1639bf
01/12/2017  01:47 PM        69,992,960 layer.vhd
               1 File(s)     69,992,960 bytes
 Directory of C:\ProgramData\docker\windowsfilter\096c08b67eb1cfdf71dfa24801982cbee983aa72100ebe88adb0ff8cadd4774b
01/12/2017  01:47 PM       149,881,344 layer.vhd
               1 File(s)    149,881,344 bytes
 Directory of C:\ProgramData\docker\windowsfilter\a27f1fd294170186c75ed19f3b547c5e0da717ae789e880391c57e1c42e732ec
01/12/2017  01:47 PM            66,048 layer.vhd
               1 File(s)         66,048 bytes
     Total Files Listed:
               3 File(s)    219,940,352 bytes
               0 Dir(s)  90,299,899,904 bytes free
C:\ProgramData\docker\windowsfilter>

// contents of a Linux layer
PS C:\Demo\ServiceVM> dir C:\ProgramData\docker\windowsfilter\00bb52750291e6c394972c717d17f2c331f92f12f7f724a9e112b0958c1639bf
    Directory: C:\ProgramData\docker\windowsfilter\00bb52750291e6c394972c717d17f2c331f92f12f7f724a9e112b0958c1639bf
Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-a----        1/12/2017   1:47 PM       69992960 layer.vhd
-a----        1/12/2017   1:47 PM            108 layerchain.json
PS C:\Demo\ServiceVM>

//---------------------------------------------------
// Attach VHD to the target Linux VM
//---------------------------------------------------
After that, it should be able to create VHDs from the docker layers.  
There is a ps script for this purpose in C:\Demo\ServiceVM\
To use it, run  .\docker_attach_vhds.ps1 <DockerImageName> <GuestLinuxMachineName>


eg.
PS C:\Demo\ServiceVM> .\docker_attach_vhds.ps1 nginx Linux
C:\ProgramData\docker\windowsfilter\a27f1fd294170186c75ed19f3b547c5e0da717ae789e880391c57e1c42e732ec\layer.vhd 0 2
C:\ProgramData\docker\windowsfilter\00bb52750291e6c394972c717d17f2c331f92f12f7f724a9e112b0958c1639bf\layer.vhd 0 3
C:\ProgramData\docker\windowsfilter\096c08b67eb1cfdf71dfa24801982cbee983aa72100ebe88adb0ff8cadd4774b\layer.vhd 0 4
PS C:\Demo\ServiceVM>

The new device will show up on Linux VM
test@ubuntu:~$ lsblk
NAME                  MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sdd                     8:48   0  143M  0 disk
sdb                     8:16   0   64K  0 disk
sdc                     8:32   0 66.8M  0 disk
...

