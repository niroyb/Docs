
Setup instructions for the HD-VM  end-to-end demo
(You need to follow these instructions in sequence)

1. Install Windows Server with build \\winbuilds\release\RS_ONECORE_CONTAINER_HYP\16172.1000.170406-1700\amd64fre or later
   And enable the hyper-v and container features
   Create dircetory structures for the Linux kernel
      xcopy /E  \\apollon\public\Soccerl\HDVM\BootImages\ImageForIntegration\Linux C:\Linux
   Copy the latest Linux kernel bits to the host C:\Linux\Kernel from \\apollon\public\Soccerl\HDVM\BootImages\ImageForIntegration\
      copy \\apollon\public\Soccerl\HDVM\BootImages\ImageForIntegration\bootx64.efi C:\Linux\kernel
      copy \\apollon\public\Soccerl\HDVM\BootImages\ImageForIntegration\initrd.img C:\Linux\kernel
      
   Register a GCS Service integration GUID for the hyper-v socket link between the host and the service VM by running the following register file
   \\apollon\public\Soccerl\HDVM\BootImages\ImageForIntegration\Linux\GuidsForGCSIntegrationServices.reg

2. Setup Linux Service VM
   Copy the latest vhdx image for this VM to the Windows host from \\plang-srv.ntdev.corp.microsoft.com\Shared\HDVM\LinuxServiceVM
   Create a Gen2 VM named with “LinuxServiceVM”
   Upon boot, on Grub menu, goto the Advanced options for Ubuntu -> select Linux 4.10.0-rc4+ (9th menu item)
      When prompted for “please unlock disk_sda3_crypt: passphrase
   Log on
      User name: root
      Password: asd
   Launch tar<--->vhd conversation service 
      cd /root/repos/hd-vm/docker_work/serviceVMServer
      ./start_service_vm.sh

    Note: you need to have this VM running before performing any docker pull operations.

2. Setup Docker binaries

   Copy the latest private docker bits (docker.exe and dockerd.exe) to windows\system32 from \\apollon\public\Soccerl\HDVM\BootImages\ImageForIntegration\PrivateDockerBits

    C:\Users\soccerl>dir \\apollon\public\Soccerl\HDVM\BootImages\ImageForIntegration\PrivateDockerBits
    04/06/2017  01:57 PM        11,919,360 docker.exe
    04/06/2017  01:58 PM        33,019,702 dockerd.exe

3. Granting the VM group access to the directory containing the docker images and linux kernel bits.
        In a elevated Powershell command line, run:
        PS C:\Linux> ./set_perms.ps1 C:\ProgramData\dockerX
        PS C:\Linux> ./set_perms.ps1   C:\Linux

3. Launch docker engine
   In an elevated command box, run 
       dockerd -D -g C:\ProgramData\dockerX
       (-D, --debug              Enable debug mode)
  
   In an elevated commnad box, run images (to see if the dockerd daemon is running and running)
     C:\WINDOWS\system32>docker images
     REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE

   If the output is same as above, your setup is good to go!

-----------------------------------------------------------------------------
Validate your setup by running the following sequence 

(Here is the one-minute Video showing the live demo (\\apollon\public\Soccerl\HDVM\docs\VideoForSimpleHD-VM_En-2-end_scenario.MOV))

PS C:\Linux> docker version
Client:
Version:      1.14.0-dev
API version:  1.26
Go version:   go1.7.3
Git commit:   31156ec53-unsupported
Built:        Thu Apr  6 13:57:28 2017
OS/Arch:      windows/amd64

Server:
Version:      1.14.0-dev
API version:  1.26 (minimum version 1.24)
Go version:   go1.7.3
Git commit:   31156ec53-unsupported
Built:        Thu Apr  6 13:57:28 2017
OS/Arch:      windows/amd64
Experimental: false
PS C:\Linux> docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
PS C:\Linux> docker pull busybox
Using default tag: latest
latest: Pulling from library/busybox
7520415ce762: Pull complete
Digest: sha256:32f093055929dbc23dec4d03e09dfe971f5973a9ca5cf059cbfb644c206aa83f
Status: Downloaded newer image for busybox:latest
PS C:\Linux> docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
busybox             latest              00f017a8c2a6        4 weeks ago         3.15 MB
PS C:\Linux> docker run -i --isolation=hyperv busybox
/ # ls
ls
bin   dev   etc   home  proc  root  sys   tmp   usr   var
/ #
/ # uname -a
uname -a
Linux 6487de9654d9 4.10.0-rc4+ #1 SMP Thu Jan 19 18:58:56 PST 2017 x86_64 GNU/Linux
/ #
/ # exit
exit
PS C:\Linux>
-----------------------------

